% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_na.R
\name{freplace_na}
\alias{freplace_na}
\title{Replaces NA's with specified values.}
\usage{
freplace_na(
  data,
  replace = list(),
  defaults = list(),
  ignore = character(),
  ...
)
}
\arguments{
\item{data}{the thing that has NA's in it (a data.frame or vector)}

\item{replace}{a named list of elements to use for custom replacement values}

\item{defaults}{if named elements in \code{data} do not appear in \code{replace}, you
can provide default values for categories of parameters (ie.
\code{"categorical"} or \code{"numeric"}), otherwise
FacileData:::defaults.freplace_na will be used.}
}
\value{
an NA-replaced version of \code{data}
}
\description{
Some the downstream uses of a FacileDataStore can throw problems when NA's
are found in data or covariates, so we often want to fill in NA's with
non-NA markers of missing values. Note that unless specified otherwise
(using the \code{replace} and \code{defaults} parameters),
}
\details{
Depending on the atomic type of the thing that NA's are being replaced with,
a default value is assumed. These can be overriden by using the \code{defaults}
parameter, or specifically by column (or list) names via the \code{replace}
parameter.

Missing values (NA's) come up often in FacileDataStores since we often use
them to include data from multiple datasets, which induces "ragged" (sparse)
covariate (pData) entries. In man
}
\examples{
data <- data.frame(
  a = rnorm(10),
  b = letters[1:10],
  c = factor(LETTERS[1:10]))
data[3, ] <- NA
r1 <- freplace_na(data, list(b = "bee"), ignore = "a")
r2 <- freplace_na(data, list(b = "bee"), defaults = list(numeric = -Inf))
}
